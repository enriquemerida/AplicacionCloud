name: CI/CD - Completo (main)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_test_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Dar permisos a mvnw
        run: chmod +x mvnw

      # PRUEBAS + BUILD (Maven ejecuta tests por defecto al empaquetar)
      - name: Build con tests
        run: ./mvnw -q clean package

      # ESCANEO DE VULNERABILIDADES (rápido/estable)
      - name: Trivy FS scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: fs
          scan-ref: .
          format: table
          exit-code: '0'        # cambia a '1' si quieres que falle con CVEs
          ignore-unfixed: true
          vuln-type: 'os,library'

      # Artefacto: JAR construido
      - name: Subir JAR
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  deploy_test:
    # “Despliegue” efímero en el runner + smoke test
    runs-on: ubuntu-latest
    needs: build_test_scan
    environment: test

    steps:
      - name: Descargar JAR
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: ./dist

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Arrancar app (perfil dev)
        run: |
          nohup java -jar ./dist/*.jar --spring.profiles.active=dev > app.log 2>&1 &
          echo $! > app.pid
          # espera a que arranque
          sleep 20
          tail -n 120 app.log || true

      - name: Smoke test /login
        run: |
          for i in {1..6}; do
            code=$(curl -I -s -o /dev/null -w "%{http_code}" http://localhost:8080/login || true)
            if echo "$code" | grep -E "200|302" >/dev/null; then
              echo "OK /login -> $code"; exit 0; fi
            echo "Aún no responde (HTTP $code)"; sleep 5
          done
          echo "Smoke test falló"; tail -n 200 app.log || true; exit 1

      - name: Detener app
        if: always()
        run: |
          if [ -f app.pid ]; then kill $(cat app.pid) || true; fi
          echo "Stopped."
